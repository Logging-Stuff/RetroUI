{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "Retro Button",
  "description": "This bold button makes sure your users click on it and perform the actions you want!",
  "dependencies": [
    "class-variance-authority",
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "components/retroui/Button.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport React, { ButtonHTMLAttributes } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\n\nconst buttonVariants = cva(\n  \"font-head transition-all rounded outline-hidden cursor-pointer duration-200 font-medium flex items-center\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"shadow-md hover:shadow active:shadow-none bg-primary text-primary-foreground border-2 border-black transition hover:translate-y-1 active:translate-y-2 active:translate-x-1 hover:bg-primary-hover\",\n        secondary:\n          \"shadow-md hover:shadow active:shadow-none bg-secondary shadow-primary text-secondary-foreground border-2 border-black transition hover:translate-y-1 active:translate-y-2 active:translate-x-1 hover:bg-secondary-hover\",\n        outline:\n          \"shadow-md hover:shadow active:shadow-none bg-transparent border-2 transition hover:translate-y-1 active:translate-y-2 active:translate-x-1\",\n        link: \"bg-transparent hover:underline\",\n      },\n      size: {\n        sm: \"px-3 py-1 text-sm shadow hover:shadow-none\",\n        md: \"px-4 py-1.5 text-base\",\n        lg: \"px-6 lg:px-8 py-2 lg:py-3 text-md lg:text-lg\",\n        icon: \"p-2\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface IButtonProps\n  extends ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, IButtonProps>(\n  (\n    {\n      children,\n      size = \"md\",\n      className = \"\",\n      variant = \"default\",\n      asChild = false,\n      ...props\n    }: IButtonProps,\n    forwardedRef,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        ref={forwardedRef}\n        className={cn(buttonVariants({ variant, size }), className)}\n        {...props}\n      >\n        {children}\n      </Comp>\n    );\n  },\n);\n\nButton.displayName = \"Button\";",
      "type": "registry:component",
      "target": "components/retroui/Button.tsx"
    }
  ]
}